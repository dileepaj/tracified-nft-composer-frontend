import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';
import { ComposerBackendService } from 'src/app/services/composer-backend.service';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { SidenavService } from 'src/app/services/sidenav.service';
import { AppState } from 'src/app/store/app.state';
import { selectNFTContent } from 'src/app/store/nft-state-store/nft.selector';
import { NFTContent } from 'src/models/nft-content/nft.content';

@Component({
  selector: 'app-nft-html',
  templateUrl: './nft-html.component.html',
  styleUrls: ['./nft-html.component.scss'],
})
export class NftHtmlComponent implements OnInit {
  nft$: NFTContent;
  json: any;
  sidenav: boolean = true;
  htmlStr: any;
  encodedValue : any;

  encodedHtml =
    '';

  @ViewChild('iframe', { static: false }) iframe: ElementRef;

  constructor(private _composerService : ComposerBackendService){}

  ngOnInit(): void {}

  public ngAfterViewInit() {
    this.populateIframe(this.iframe.nativeElement);
  }

  private populateIframe(iframe: any) {
    //decode the html
    this.htmlStr = atob(this.encodedHtml);
    console.log(this.htmlStr);

    //get from backend
    // this._composerService.generateHTML(this.nft$).subscribe((data) => {
     
    // })

    const content = this.htmlStr;
    iframe.contentWindow.document.open();
    iframe.contentWindow.document.write(content);
    iframe.contentWindow.document.close();
  }
}
